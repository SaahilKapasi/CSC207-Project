import openai
import pandas as pd

openai.api_key = 'OPENAI_API_KEY'
"""
Environment Variable Configuration: The openai library automatically checks for the OPENAI_API_KEY environment variable, 
so if youâ€™ve set your API key as an environment variable, it will be detected without explicitly setting openai.api_key in the script.
To set it in your environment, you can use:

export OPENAI_API_KEY='your_openai_api_key'

in a terminal (for temporary session use)
"""


def generate_summary_analysis(filtered_df: pd.DataFrame) -> str:
    """
    Generate a summary analysis from a filtered DataFrame using OpenAI's ChatGPT API.

    Parameters:
    filtered_df (pd.DataFrame): The filtered DataFrame for which to generate summary analysis.

    Returns:
    str: Summary analysis text generated by ChatGPT.
    """
    df_text = filtered_df.to_string()

    prompt = f"""
    Here is a dataset after filtering interested attributes:

    {df_text}

    Please provide a summary analysis of this data, including key observations on bias, averages, notable outliers, and any other interesting insights.
    """

    try:
        response = openai.Completion.create(
            engine="text-davinci-003",
            prompt=prompt,
            max_tokens=200,
            temperature=0.7
        )

        # Extract the response text
        summary_analysis = response.choices[0].text.strip()
        return summary_analysis

    except openai.error.OpenAIError as e:
        print("An error occurred:", e)
        return None
